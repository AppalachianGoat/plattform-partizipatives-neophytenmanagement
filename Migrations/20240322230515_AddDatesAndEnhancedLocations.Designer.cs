// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using plattform_partizipatives_neophytenmanagement.Data;

#nullable disable

namespace plattformpartizipativesneophytenmanagement.Migrations
{
    [DbContext(typeof(FarmerHelperMatchContext))]
    [Migration("20240322230515_AddDatesAndEnhancedLocations")]
    partial class AddDatesAndEnhancedLocations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.FarmerHelpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfHelpers")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WorkVolume")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("FarmerHelpRequests");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.HelperHelpOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("DistanceFromLocation")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfHelpers")
                        .HasColumnType("integer");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WorkVolume")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("HelperHelpOffers");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.InvasiveSpeciesType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FarmerHelpRequestId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FarmerHelpRequestId");

                    b.ToTable("InvasiveSpeciesTypes");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<string>("LocationString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.Negotiation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FarmerHelpRequestId")
                        .HasColumnType("integer");

                    b.Property<int>("FarmerStatus")
                        .HasColumnType("integer");

                    b.Property<int>("HelperHelpOfferId")
                        .HasColumnType("integer");

                    b.Property<int>("HelperStatus")
                        .HasColumnType("integer");

                    b.Property<int>("InitiatedByUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FarmerHelpRequestId");

                    b.HasIndex("HelperHelpOfferId");

                    b.HasIndex("InitiatedByUserId");

                    b.ToTable("Negotiations");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.FarmerHelpRequest", b =>
                {
                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.HelperHelpOffer", b =>
                {
                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.InvasiveSpeciesType", b =>
                {
                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.FarmerHelpRequest", null)
                        .WithMany("InvasiveSpeciesTypes")
                        .HasForeignKey("FarmerHelpRequestId");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.Negotiation", b =>
                {
                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.FarmerHelpRequest", "FarmerHelpRequest")
                        .WithMany()
                        .HasForeignKey("FarmerHelpRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.HelperHelpOffer", "HelperHelpOffer")
                        .WithMany()
                        .HasForeignKey("HelperHelpOfferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("plattform_partizipatives_neophytenmanagement.Models.User", "InitiatedByUser")
                        .WithMany()
                        .HasForeignKey("InitiatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FarmerHelpRequest");

                    b.Navigation("HelperHelpOffer");

                    b.Navigation("InitiatedByUser");
                });

            modelBuilder.Entity("plattform_partizipatives_neophytenmanagement.Models.FarmerHelpRequest", b =>
                {
                    b.Navigation("InvasiveSpeciesTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
